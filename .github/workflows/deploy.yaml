# name: Deploy
# on: push

# jobs:
#   deployment:
#     runs-on: 'ubuntu-latest'
#     steps:
#     - uses: actions/checkout@v1

#     - name: 'Deploy'
#       uses: deliverybot/helm@master
#       with:
#         release: 'crypto-api'
#         namespace: 'default'
#         chart: './k8s-helm/crypto-api'
#         token: '${{ github.token }}'
#         value_files: "values.yaml"
#       env:
#         KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}' 

#       # uses: peymanmortazavi/eks-helm-deploy@v2
#       # with:
#       #   aws-access-key-id: ${{ secrets.AWS_ACCESS__KEY_ID }}
#       #   aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       #   aws-region: us-east-2
#       #   cluster-name: crypto-api-eks
#       #   cluster-role-arn: arn:aws:iam::959068696076:role/crypto-api-eks2022020709502244020000000c
#       #   chart-path: ./k8s-helm/crypto-api
#       #   config-files: ./k8s-helm/crypto-api/value.yaml
#       #   namespace: default
#       #   name: crypto-api-demo

name: Deploy
on: push

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v1
      # - name: Prep helm chart
      #   run: |
      #     mv ./.helm/app/Chart.yaml ./.helm/app/Chart.old.yaml &&
      #     cat ./.helm/app/Chart.old.yaml | grep -v appVersion > ./.helm/app/Chart.yaml &&
      #     echo -e "\r\nappVersion: v${GITHUB_REF##*/}\r\n" >> ./.helm/app/Chart.yaml &&
      #     cat ./.helm/app/Chart.yaml
      - name: tests
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: kubectl get pods 
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - name: test connectivity
        run: |
          ping -c 10 e72b52efb5a2a7ca3fc69f58f807de3c.gr7.us-east-2.eks.amazonaws.com
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm upgrade crypto-api ./k8s-helm/crypto-api/ --install --wait --atomic --namespace=default  --values=./k8s-helm/crypto-api/values.yaml
          kubeconfig: '${{ secrets.KUBECONFIG }}'